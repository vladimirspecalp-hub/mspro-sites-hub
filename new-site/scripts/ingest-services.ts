#!/usr/bin/env ts-node
/**
 * Service Migration Script
 * –ü–∞—Ä—Å–∏—Ç —Å—Ç–∞—Ä—ã–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É—Å–ª—É–≥ –∏ —Å–æ–∑–¥–∞–µ—Ç MDX —Ñ–∞–π–ª—ã
 */

import * as fs from 'fs';
import * as path from 'path';
import { JSDOM } from 'jsdom';

interface ParsedService {
  title: string;
  slug: string;
  category: string;
  excerpt: string;
  content: string;
  images: string[];
  price?: string;
}

class ServiceIngester {
  private inputDir = path.join(__dirname, '../../../public_html');
  private outputDir = path.join(__dirname, '../src/content/services');

  constructor() {
    // Create output directory if it doesn't exist
    if (!fs.existsSync(this.outputDir)) {
      fs.mkdirSync(this.outputDir, { recursive: true });
    }
  }

  async ingestAll(): Promise<void> {
    console.log('üöÄ Starting service ingestion...');
    
    // Mock service data for demonstration
    const mockServices = await this.generateMockServices();
    
    for (const service of mockServices) {
      await this.createMDXFile(service);
    }
    
    console.log(`‚úÖ Ingested ${mockServices.length} services successfully!`);
  }

  private async generateMockServices(): Promise<ParsedService[]> {
    return [
      {
        title: "–í—ã—Å–æ—Ç–Ω–∞—è –ø–æ–∫—Ä–∞—Å–∫–∞ —Ñ–∞—Å–∞–¥–æ–≤",
        slug: "vysotniaya-pokraska-fasadov",
        category: "–í—ã—Å–æ—Ç–Ω—ã–µ —Ä–∞–±–æ—Ç—ã",
        excerpt: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–∫—Ä–∞—Å–∫–∞ —Ñ–∞—Å–∞–¥–æ–≤ –∑–¥–∞–Ω–∏–π –º–µ—Ç–æ–¥–æ–º –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –∞–ª—å–ø–∏–Ω–∏–∑–º–∞ –±–µ–∑ –ª–µ—Å–æ–≤ –∏ –ø–æ–¥—ä–µ–º–Ω–∏–∫–æ–≤.",
        content: `## –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤—ã—Å–æ—Ç–Ω–æ–π –ø–æ–∫—Ä–∞—Å–∫–∏

- –†–∞–±–æ—Ç—ã –±–µ–∑ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –ª–µ—Å–æ–≤ - —ç–∫–æ–Ω–æ–º–∏—è –¥–æ 60%
- –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è - –æ—Ç 3 –¥–Ω–µ–π
- –õ—é–±–∞—è –≤—ã—Å–æ—Ç–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
- –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã

## –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Ä–∞–±–æ—Ç

–ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–ª—å–ø–∏–Ω–∏—Å—Ç—Å–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è. –í—Å–µ —Ä–∞–±–æ—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ —Å—Ç—Ä–æ–≥–æ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –æ—Ö—Ä–∞–Ω—ã —Ç—Ä—É–¥–∞.

## –≠—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

1. **–û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ñ–∞—Å–∞–¥–∞** - –æ—Ü–µ–Ω–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏, –≤—ã–±–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
2. **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏** - –æ—á–∏—Å—Ç–∫–∞, –≥—Ä—É–Ω—Ç–æ–≤–∞–Ω–∏–µ, –∑–∞–¥–µ–ª–∫–∞ —Ç—Ä–µ—â–∏–Ω
3. **–ù–∞–Ω–µ—Å–µ–Ω–∏–µ –ø–æ–∫—Ä—ã—Ç–∏–π** - –≤ 2-3 —Å–ª–æ—è —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –∫–∞—á–µ—Å—Ç–≤–∞
4. **–§–∏–Ω–∏—à–Ω—ã–µ —Ä–∞–±–æ—Ç—ã** - —É–±–æ—Ä–∫–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏, —Å–¥–∞—á–∞ –æ–±—ä–µ–∫—Ç–∞

## –ì–∞—Ä–∞–Ω—Ç–∏–∏

- –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–æ 8 –ª–µ—Ç
- –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏
- –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞ –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã`,
        images: [
          "/images/services/pokraska/1.webp",
          "/images/services/pokraska/2.webp"
        ],
        price: "–û—Ç 280 ‚ÇΩ/–º¬≤"
      },
      {
        title: "–ì–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏—è –º–µ–∂–ø–∞–Ω–µ–ª—å–Ω—ã—Ö —à–≤–æ–≤",
        slug: "germetizatsiya-shvov",
        category: "–í—ã—Å–æ—Ç–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", 
        excerpt: "–ì–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏—è –∏ —É—Ç–µ–ø–ª–µ–Ω–∏–µ –º–µ–∂–ø–∞–Ω–µ–ª—å–Ω—ã—Ö —à–≤–æ–≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –ø—Ä–æ–º–µ—Ä–∑–∞–Ω–∏—è –∏ –ø—Ä–æ—Ç–µ—á–µ–∫.",
        content: `## –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≥–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏–∏ —à–≤–æ–≤

- –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–µ—Ä–∑–∞–Ω–∏–π –∏ —Å–∫–≤–æ–∑–Ω—è–∫–æ–≤
- –ó–∞—â–∏—Ç–∞ –æ—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã—Ö –æ—Å–∞–¥–∫–æ–≤
- –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–µ—Ä–º–µ—Ç–∏–∫–∏ —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –¥–æ 25 –ª–µ—Ç
- –≠–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–∂–µ–Ω–∏–µ –¥–æ 30%

## –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Ä–∞–±–æ—Ç

–ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≥–µ—Ä–º–µ—Ç–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª–∏—É—Ä–µ—Ç–∞–Ω–∞ –∏ —Å–∏–ª–∏–∫–æ–Ω–∞, —É—Å—Ç–æ–π—á–∏–≤—ã–µ –∫ UV-–∏–∑–ª—É—á–µ–Ω–∏—é –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–º –ø–µ—Ä–µ–ø–∞–¥–∞–º.

## –≠—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

1. **–î–µ–º–æ–Ω—Ç–∞–∂ —Å—Ç–∞—Ä–æ–≥–æ –≥–µ—Ä–º–µ—Ç–∏–∫–∞** - –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —à–≤–æ–≤
2. **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏** - –æ–±–µ—Å–ø—ã–ª–∏–≤–∞–Ω–∏–µ, –≥—Ä—É–Ω—Ç–æ–≤–∞–Ω–∏–µ
3. **–£–∫–ª–∞–¥–∫–∞ —É—Ç–µ–ø–ª–∏—Ç–µ–ª—è** - —ç–Ω–µ—Ä–≥–æ—Å–±–µ—Ä–µ–≥–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
4. **–ù–∞–Ω–µ—Å–µ–Ω–∏–µ –≥–µ—Ä–º–µ—Ç–∏–∫–∞** - –≤ 2 —Å–ª–æ—è —Å –∞—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º
5. **–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞** - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–≥–µ–∑–∏–∏ –∏ –≥–µ—Ä–º–µ—Ç–∏—á–Ω–æ—Å—Ç–∏

## –ì–∞—Ä–∞–Ω—Ç–∏–∏

- –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –≥–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏—é –¥–æ 10 –ª–µ—Ç
- –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –≤–µ–¥—É—â–∏—Ö –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π
- –ü–æ–ª–Ω–æ–µ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç`,
        images: [
          "/images/services/germetik/1.webp",
          "/images/services/germetik/2.webp"
        ],
        price: "–û—Ç 450 ‚ÇΩ/–ø.–º"
      },
      {
        title: "–ú–æ–π–∫–∞ —Ñ–∞—Å–∞–¥–æ–≤ –∏ –æ—Å—Ç–µ–∫–ª–µ–Ω–∏—è",
        slug: "moyka-fasadov-ostekleniya",
        category: "–ö–ª–∏–Ω–∏–Ω–≥",
        excerpt: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–æ–π–∫–∞ —Ñ–∞—Å–∞–¥–æ–≤, –≤–∏—Ç—Ä–∞–∂–µ–π –∏ –æ—Å—Ç–µ–∫–ª–µ–Ω–∏—è –≤—ã—Å–æ—Ç–Ω—ã—Ö –∑–¥–∞–Ω–∏–π —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –∞–ª—å–ø–∏–Ω–∏—Å—Ç—Å–∫–æ–≥–æ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è.",
        content: `## –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –º–æ–π–∫–∏

- –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞
- –£–¥–∞–ª–µ–Ω–∏–µ –ª—é–±—ã—Ö –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π
- –†–∞–±–æ—Ç–∞ –Ω–∞ –ª—é–±–æ–π –≤—ã—Å–æ—Ç–µ
- –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É

## –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –º–æ–π–∫–∏

–ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ—é—â–∏–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –æ—á–∏—Å—Ç–∫–∏, –ø–æ–¥–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏.

## –í–∏–¥—ã —Ä–∞–±–æ—Ç

- –ú–æ–π–∫–∞ —Å—Ç–µ–∫–ª—è–Ω–Ω—ã—Ö —Ñ–∞—Å–∞–¥–æ–≤ –∏ –≤–∏—Ç—Ä–∞–∂–µ–π
- –û—á–∏—Å—Ç–∫–∞ –∫–æ–º–ø–æ–∑–∏—Ç–Ω—ã—Ö –∏ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –ø–∞–Ω–µ–ª–µ–π
- –£–¥–∞–ª–µ–Ω–∏–µ –≤—ã—Å–æ–ª–æ–≤ –∏ –∫–æ—Ä—Ä–æ–∑–∏–∏
- –ú–æ–π–∫–∞ –ø–æ—Å–ª–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç

## –≠—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

1. **–û—Ü–µ–Ω–∫–∞ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π** - –ø–æ–¥–±–æ—Ä –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤
2. **–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞** - —É–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–±—ã—Ö –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π
3. **–û—Å–Ω–æ–≤–Ω–∞—è –º–æ–π–∫–∞** - —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º —Å–ø–µ—Ü—Å—Ä–µ–¥—Å—Ç–≤
4. **–û–ø–æ–ª–∞—Å–∫–∏–≤–∞–Ω–∏–µ** - –¥–µ–º–∏–Ω–µ—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–π –≤–æ–¥–æ–π
5. **–°—É—à–∫–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å** - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

## –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ

- –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä—ã –Ω–∞ –≥–æ–¥
- –°–∫–∏–¥–∫–∏ –ø—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –¥–æ 25%
- –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –≤—ã–µ–∑–¥—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 4 —á–∞—Å–æ–≤`,
        images: [
          "/images/services/moyka/1.webp",
          "/images/services/moyka/2.webp"
        ],
        price: "–û—Ç 35 ‚ÇΩ/–º¬≤"
      }
    ];
  }

  private async createMDXFile(service: ParsedService): Promise<void> {
    const frontmatter = `---
title: "${service.title}"
slug: "${service.slug}"
excerpt: "${service.excerpt}"
category: "${service.category}"
city_targets: ["–ú–æ—Å–∫–≤–∞","–°–ü–±","–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥","–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"]
cover: "${service.images[0] || '/images/services/default.webp'}"
gallery: [${service.images.map(img => `"${img}"`).join(', ')}]
faq:
  - q: "–ö–∞–∫–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?"
    a: "–†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –≤–µ–¥—É—â–∏—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π –∫–∞—á–µ—Å—Ç–≤–∞."
  - q: "–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ —Ä–∞–±–æ—Ç—ã?"
    a: "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—é –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –æ—Ç 2 –¥–æ 10 –ª–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∏–¥–∞ —É—Å–ª—É–≥."
  - q: "–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏?"
    a: "–î–∞, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–µ–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—ã –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏."
  - q: "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ?"
    a: "–ü–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: –∞–∫—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç, –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤."
${service.price ? `price_note: "${service.price}"` : ''}
schema:
  type: "Service"
updatedAt: "${new Date().toISOString().split('T')[0]}"
---

${service.content}
`;

    const filePath = path.join(this.outputDir, `${service.slug}.mdx`);
    fs.writeFileSync(filePath, frontmatter);
    
    console.log(`üìÑ Created: ${service.slug}.mdx`);
  }

  // Method to parse actual HTML files (when available)
  private parseHTMLService(htmlPath: string): ParsedService | null {
    try {
      const html = fs.readFileSync(htmlPath, 'utf-8');
      const dom = new JSDOM(html);
      const document = dom.window.document;
      
      // Extract title
      const title = document.querySelector('h1')?.textContent?.trim() || 
                   document.querySelector('title')?.textContent?.trim() || 
                   'Untitled Service';
      
      // Generate slug from title
      const slug = title.toLowerCase()
        .replace(/[^a-z–∞-—è0-9\s]/g, '')
        .replace(/\s+/g, '-')
        .replace(/^-+|-+$/g, '');
      
      // Extract content
      const contentDiv = document.querySelector('.content, .main, article, .service-content');
      const paragraphs = contentDiv?.querySelectorAll('p') || [];
      const headings = contentDiv?.querySelectorAll('h2, h3') || [];
      
      let content = '';
      headings.forEach(heading => {
        content += `## ${heading.textContent?.trim()}\n\n`;
        const nextElements = this.getNextSiblings(heading, ['P', 'UL', 'OL']);
        nextElements.forEach(el => {
          content += `${el.textContent?.trim()}\n\n`;
        });
      });
      
      // Extract images
      const images = Array.from(document.querySelectorAll('img'))
        .map(img => img.src)
        .filter(src => src && !src.includes('data:'))
        .slice(0, 3);
      
      // Extract excerpt (first paragraph)
      const excerpt = paragraphs[0]?.textContent?.trim().slice(0, 160) || '';
      
      return {
        title,
        slug,
        category: '–£—Å–ª—É–≥–∏', // Default category
        excerpt,
        content: content || '–ö–æ–Ω—Ç–µ–Ω—Ç —É—Å–ª—É–≥–∏',
        images,
        price: this.extractPrice(html)
      };
      
    } catch (error) {
      console.error(`Error parsing ${htmlPath}:`, error);
      return null;
    }
  }

  private getNextSiblings(element: Element, tagNames: string[]): Element[] {
    const siblings: Element[] = [];
    let next = element.nextElementSibling;
    
    while (next && !tagNames.includes(next.tagName.toUpperCase())) {
      if (tagNames.includes(next.tagName)) {
        siblings.push(next);
      }
      next = next.nextElementSibling;
    }
    
    return siblings;
  }

  private extractPrice(html: string): string | undefined {
    const priceRegex = /(?:–æ—Ç\s+)?(\d+(?:\s?\d+)*)\s*(?:—Ä—É–±|‚ÇΩ|—Ä\.?)/gi;
    const match = html.match(priceRegex);
    return match?.[0];
  }
}

// CLI execution
if (require.main === module) {
  const ingester = new ServiceIngester();
  ingester.ingestAll()
    .then(() => {
      console.log('‚ú® Service ingestion completed successfully!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Service ingestion failed:', error);
      process.exit(1);
    });
}

export { ServiceIngester };